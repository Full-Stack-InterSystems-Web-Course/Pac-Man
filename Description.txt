PacMan - игровая обучающая система, предоставляющая API для написания ботов, которые управляют игровым персонажем.
Архитектура приложения: Клиент - Сервер
Взаимодействие ботов с игровым сервером осуществляется через API для соответствующего языка программирования.
Взаимодействие между игровым клиентом (ботом) и сервером осуществляется через сокеты и дополнительно используют json.

Игровая система предоставляет возможность одиночной игры человеком или ботом (в режиме одиночной игры возможно тестирование и отладка программы бота), игры в соревновательном режиме возможны только между ботами. В таком режиме сервером создаются две полностью идентичные карты, на каждой из которых играет свой бот. В зачёт боту идёт время выживания и количество очков набранное за игру. Побеждает бот, который наберёт больше итоговых очков.

Игровой клиент предоставляет возможность одиночной игры человеку с использованием клавиатуры, а также возможность просмотра игрового процесса в текущих игровых комнатах.

==========================================================================================================================

BOT
1) Подключение к серверу
2) Выбор типа игры
3) Ответ от сервера об успешном соеднении
4) Готовность играть
5) Цикл игры 
	{
	while (game.isAive()) {
			getGameInfo() // Метод API
			Анализ игровых данных
			Принятие решения
		}
	}
6) Ожиание результатов игры (возможность проигнорировать их)
7) Конец

==========================================================================================================================

Game Client / Game View
1) Подключение к серверу
2) Выбор типа игры
3) Ответ от сервера об успеном соеднении
4) Готовность играть
5) Цикл игры 
	{
	while (game.isAive()) {
			getGameInfo() Метод API
			Отобразить данные на View
			Перехват нажатия клавиши
			Вызов соответствующего метода API
		}
	}
6) Ожиание результатов игры (возможность проигнорировать их)
7) Конец

==========================================================================================================================

Server
1) Запуск сервера
2) Ожидания подключения
3) Создать комнату по запросу (в зависимости от типа, кинуть в очередь игрока)
4) Отправить уведомление об успешном создании комнаты
5) Ожидать команды от игроков о готовности начать игру
6) Игровой цикл
	6.1 По таймеру воспроизвести (обработать и изменить координаты) движение
	6.2 Контроль столкновений еды и привидений и пакмана
	6.3 Осмотр очереди запросов
	6.4 Ответ на запрос
	6.5 Выполнение команд
	6.6 Выполнение алгоритмов ботов
7) Удаление пустой игровой комнаты

==========================================================================================================================